{"version":3,"sources":["meteorhacks:collection-utils/index.js"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,0C;;AAEA,wE;AACA,uE;AACA,kB;AACA,0C;AACA,sC;;AAEA,a;AACA,E;;AAEA,gD;AACA,oD;AACA,qC;AACA,U;AACA,sD;AACA,+D;AACA,8C;AACA,2B;AACA,yE;AACA,iC;AACA,G;AACA,E;;AAEA,wD;AACA,yB;AACA,mC;AACA,C;;AAEA,gC;AACA,6E;AACA,8C;AACA,oB;AACA,wB;AACA,G;;AAEA,iD;AACA,uB;AACA,kC;AACA,iB;AACA,K;AACA,kB;AACA,C","file":"/packages/meteorhacks:collection-utils.js","sourcesContent":["var Future = Npm.require('fibers/future');\n\nvar originalOpen = MongoInternals.RemoteCollectionDriver.prototype.open;\nMongoInternals.RemoteCollectionDriver.prototype.open = function(name) {\n  var self = this;\n  var ret = originalOpen.call(this, name);\n  ret._getDb = wrapWithDb(this.mongo);\n\n  return ret;\n};\n\nMongo.Collection.prototype._getDb = function() {\n  if(typeof this._collection._getDb == 'function') {\n    return this._collection._getDb();\n  } else {\n    // if we can't find `_getDb()`, that means this is\n    // a collection created before initializing this collection\n    // if so, use the default mongo connection\n    //    eg:- Meteor.users\n    var mongoConn = MongoInternals.defaultRemoteCollectionDriver().mongo;\n    return wrapWithDb(mongoConn);\n  }\n};\n\nMongo.Collection.prototype._getCollection = function() {\n  var db = this._getDb();\n  return db.collection(this._name);\n}\n\nfunction wrapWithDb(mongoConn) {\n  // With Meteor 1.0.4, db creation is synchronous and wait in the connection\n  // constructor. So, we can get it like this.\n  if(mongoConn.db) {\n    return mongoConn.db;\n  }\n\n  // This is for Meteor versions older than 1.0.4\n  var f = new Future();\n  mongoConn._withDb(function(db) {\n    f.return(db);\n  });\n  return f.wait();\n}"]}